<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="http://localhost:4000/eserciziario2.0/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/eserciziario2.0/" rel="alternate" type="text/html" /><updated>2022-10-23T14:09:33+02:00</updated><id>http://localhost:4000/eserciziario2.0/</id><title type="html">Eserciziario</title><subtitle>Eserciziario Java.
</subtitle><entry><title type="html">MailParser</title><link href="http://localhost:4000/eserciziario2.0/string/2022/10/23/mailparser.html" rel="alternate" type="text/html" title="MailParser" /><published>2022-10-23T12:05:36+02:00</published><updated>2022-10-23T12:05:36+02:00</updated><id>http://localhost:4000/eserciziario2.0/string/2022/10/23/mailparser</id><content type="html" xml:base="http://localhost:4000/eserciziario2.0/string/2022/10/23/mailparser.html">&lt;p&gt;Il sistema di messaggistica scolastico deve ricavare il nome e il cognome dei docenti a partire dall’indirizzo email. Ogni indirizzo di posta elettronica è composto dal nome e dal cognome del docente separati da un punto e dal domino nel formato:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&amp;lt;nome&amp;gt;.&amp;lt;cognome&amp;gt;@edu.ti.ch
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Scrivi la classe Java &lt;code class=&quot;highlighter-rouge&quot;&gt;MailParser&lt;/code&gt; che, dato l’indirizzo di posta elettronica del docente memorizzato in una &lt;strong&gt;costante&lt;/strong&gt;, stampi a terminale i relativi nome e cognome. Il formato dell’output deve rispettare rigorosamente quello proposto nei seguenti esempi:&lt;/p&gt;

&lt;p&gt;Per “HAiEiE.braZoRf@edu.ti.ch” il programma stampa:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	Email: HAiEiE.braZoRf@edu.ti.ch
	Nome: Haieie
	Cognome: Brazorf
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Per “Mickey.Mouse@edu.ti.ch”:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	Email: Mickey.Mouse@edu.ti.ch
	Nome: Mickey
	Cognome: Mouse
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Per “vladimir.harkonnen@edu.ti.ch”:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	Email: vladimir.harkonnen@edu.ti.ch
	Nome: Vladimir
	Cognome: Harkonnen
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">Il sistema di messaggistica scolastico deve ricavare il nome e il cognome dei docenti a partire dall’indirizzo email. Ogni indirizzo di posta elettronica è composto dal nome e dal cognome del docente separati da un punto e dal domino nel formato:</summary></entry><entry><title type="html">HashGenerator</title><link href="http://localhost:4000/eserciziario2.0/string/2022/10/23/hashgenerator.html" rel="alternate" type="text/html" title="HashGenerator" /><published>2022-10-23T11:52:51+02:00</published><updated>2022-10-23T11:52:51+02:00</updated><id>http://localhost:4000/eserciziario2.0/string/2022/10/23/hashgenerator</id><content type="html" xml:base="http://localhost:4000/eserciziario2.0/string/2022/10/23/hashgenerator.html">&lt;p&gt;Un sistema di gestione del personale deve generare una sigla associata ad ogni dipendente secondo un formato standardizzato. Il formato prevede che la sigla di ogni persona sia composta da 4 caratteri e un numero intero:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Il primo carattere del cognome in &lt;strong&gt;maiuscolo&lt;/strong&gt;,&lt;/li&gt;
  &lt;li&gt;l’ultimo carattere del cognome in &lt;strong&gt;minuscolo&lt;/strong&gt;,&lt;/li&gt;
  &lt;li&gt;il primo carattere del nome in &lt;strong&gt;maiuscolo&lt;/strong&gt;,&lt;/li&gt;
  &lt;li&gt;l’ultimo carattere del nome in &lt;strong&gt;minuscolo&lt;/strong&gt;,&lt;/li&gt;
  &lt;li&gt;il numero totale di caratteri che compongono nome e cognome, espresso in base 10.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Scrivi la classe Java &lt;code class=&quot;highlighter-rouge&quot;&gt;HashGenerator&lt;/code&gt; che, dati nome e cognome memorizzati in due &lt;strong&gt;costanti&lt;/strong&gt;, stampi a terminale la relativa sigla. Il formato dell’output deve rispettare rigorosamente quello proposto nei seguenti esempi:&lt;/p&gt;

&lt;p&gt;Per un impiegato di nome “HAiEiE” e cognome “bRaZorF”:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	Nome:    HAiEiE
	Cognome: bRaZorF
	Sigla:   BfHe13
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Per un impiegato di nome “Mickey” e cognome “Mouse”:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	Nome:    Mickey
	Cognome: Mouse
	Sigla:   MeMy11
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Per un impiegato di nome “vladimir” e cognome “harkonnen”:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	Nome:    vladimir
	Cognome: harkonnen
	Sigla:   HnVr17
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">Un sistema di gestione del personale deve generare una sigla associata ad ogni dipendente secondo un formato standardizzato. Il formato prevede che la sigla di ogni persona sia composta da 4 caratteri e un numero intero:</summary></entry><entry><title type="html">HashBuilder</title><link href="http://localhost:4000/eserciziario2.0/string/2022/10/23/hashbuilder.html" rel="alternate" type="text/html" title="HashBuilder" /><published>2022-10-23T11:45:06+02:00</published><updated>2022-10-23T11:45:06+02:00</updated><id>http://localhost:4000/eserciziario2.0/string/2022/10/23/hashbuilder</id><content type="html" xml:base="http://localhost:4000/eserciziario2.0/string/2022/10/23/hashbuilder.html">&lt;p&gt;Un sistema di gestione del personale deve generare una sigla associata ad ogni dipendente secondo un formato standardizzato. Il formato prevede che la sigla di ogni persona sia composta da 6 caratteri:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Il primo carattere del nome in &lt;strong&gt;maiuscolo&lt;/strong&gt;,&lt;/li&gt;
  &lt;li&gt;il secondo carattere del nome in &lt;strong&gt;minuscolo&lt;/strong&gt;,&lt;/li&gt;
  &lt;li&gt;l’ultimo carattere del nome in &lt;strong&gt;minuscolo&lt;/strong&gt;,&lt;/li&gt;
  &lt;li&gt;il primo carattere del cognome in &lt;strong&gt;minuscolo&lt;/strong&gt;,&lt;/li&gt;
  &lt;li&gt;il penultimo carattere del cognome in &lt;strong&gt;minuscolo&lt;/strong&gt;,&lt;/li&gt;
  &lt;li&gt;l’ultimo carattere del cognome in &lt;strong&gt;maiuscolo&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Scrivi la classe Java &lt;code class=&quot;highlighter-rouge&quot;&gt;HashBuilder&lt;/code&gt; che, dati nome e cognome memorizzati in due &lt;strong&gt;costanti&lt;/strong&gt;, stampi a terminale la relativa sigla. Il formato dell’output deve rispettare rigorosamente quello proposto nei seguenti esempi:&lt;/p&gt;

&lt;p&gt;Per un impiegato di nome “HAiEiE” e cognome “braZoRf”:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	Cognome: braZoRf
	Nome:    HAiEiE
	Sigla:   HaebrF
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Per un impiegato di nome “Mickey” e cognome “Mouse”:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	Cognome: Mouse
	Nome:    Mickey
	Sigla:   MiymsE
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Per un impiegato di nome “vladimir” e cognome “harkonnen”:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	Cognome: harkonnen
	Nome:    vladimir
	Sigla:   VlrheN
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">Un sistema di gestione del personale deve generare una sigla associata ad ogni dipendente secondo un formato standardizzato. Il formato prevede che la sigla di ogni persona sia composta da 6 caratteri:</summary></entry><entry><title type="html">DoubleFormatter</title><link href="http://localhost:4000/eserciziario2.0/interactive%20format/2022/05/04/doubleformatter.html" rel="alternate" type="text/html" title="DoubleFormatter" /><published>2022-05-04T10:50:06+02:00</published><updated>2022-05-04T10:50:06+02:00</updated><id>http://localhost:4000/eserciziario2.0/interactive%20format/2022/05/04/doubleformatter</id><content type="html" xml:base="http://localhost:4000/eserciziario2.0/interactive%20format/2022/05/04/doubleformatter.html">&lt;p&gt;Scrivi il programma &lt;code class=&quot;highlighter-rouge&quot;&gt;DoubleFormatter&lt;/code&gt; che chiede all’utente di inserire:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Un numero double (&lt;code class=&quot;highlighter-rouge&quot;&gt;double n&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;Quanti caratteri riservare alla stampa (&lt;code class=&quot;highlighter-rouge&quot;&gt;int w&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;Quante cifre dopo la virgola stampare (&lt;code class=&quot;highlighter-rouge&quot;&gt;int p&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;Se stampare allineando a destra o a sinistra (&lt;code class=&quot;highlighter-rouge&quot;&gt;String a&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;DX&quot;&lt;/code&gt;: destra, &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;SX&quot;&lt;/code&gt;: sinistra)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dopodiché il programma stampa il numero (&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;) applicando la formattazione definita dai valori di &lt;code class=&quot;highlighter-rouge&quot;&gt;w&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt; e &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt;. Ad esempio:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Inserire un numero double: 1.23456789
Inserire ampiezza: 10
Inserire precisione: 5
Inserire allineamento (dx/sx): dx
'   1.23457'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Oppure:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Inserire un numero double: 1.23456789
Inserire ampiezza: 10
Inserire precisione: 4
Inserire allineamento (dx/sx): sx
'1.2346    '
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">Scrivi il programma DoubleFormatter che chiede all’utente di inserire:</summary></entry><entry><title type="html">PerfectNumber</title><link href="http://localhost:4000/eserciziario2.0/array/math/2022/04/14/perfectnumber.html" rel="alternate" type="text/html" title="PerfectNumber" /><published>2022-04-14T13:53:12+02:00</published><updated>2022-04-14T13:53:12+02:00</updated><id>http://localhost:4000/eserciziario2.0/array/math/2022/04/14/perfectnumber</id><content type="html" xml:base="http://localhost:4000/eserciziario2.0/array/math/2022/04/14/perfectnumber.html">&lt;p&gt;Scrivi la classe &lt;code class=&quot;highlighter-rouge&quot;&gt;PerfectNumber&lt;/code&gt; utile per individuare i &lt;em&gt;numeri perfetti&lt;/em&gt;. La classe deve esportare i metodi seguenti:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public static boolean isPerfect(int n)&lt;/code&gt;: ritorna &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; se &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; è un numero perfetto, &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt; altrimenti&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public static boolean isDefective(int n)&lt;/code&gt;: ritorna &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; se &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; è un numero difettivo, &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt; altrimenti&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public static int[] getDividers(int n)&lt;/code&gt;: ritorna un array contenente l’elenco dei divisori propri di &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public static long getDividersSum(int[] dividers)&lt;/code&gt;: ritorna la somma dei numeri contenuti nell’array &lt;code class=&quot;highlighter-rouge&quot;&gt;dividers&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public static int[] getPerfectNumbers(int min, int max)&lt;/code&gt;: ritorna un array contenente l’elenco dei numeri &lt;em&gt;perfetti&lt;/em&gt; presenti nell’intervallo [&lt;code class=&quot;highlighter-rouge&quot;&gt;min&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;max&lt;/code&gt;]&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public static int[] getDefectiveNumbers(int min, int max)&lt;/code&gt;: ritorna un array contenente l’elenco dei numeri &lt;em&gt;difettivi&lt;/em&gt; presenti nell’intervallo [&lt;code class=&quot;highlighter-rouge&quot;&gt;min&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;max&lt;/code&gt;]&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public static int[] getAbundantNumbers(int min, int max)&lt;/code&gt;: ritorna un array contenente l’elenco dei numeri &lt;em&gt;abbondanti&lt;/em&gt; presenti nell’intervallo [&lt;code class=&quot;highlighter-rouge&quot;&gt;min&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;max&lt;/code&gt;]&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;numeri-perfetti&quot;&gt;Numeri perfetti&lt;/h2&gt;

&lt;p&gt;Un numero &lt;code class=&quot;highlighter-rouge&quot;&gt;N&lt;/code&gt; è detto &lt;em&gt;perfetto&lt;/em&gt; se la somma dei suoi divisori propri (positivi, &lt;code class=&quot;highlighter-rouge&quot;&gt;N&lt;/code&gt; escluso)  è pari ad &lt;code class=&quot;highlighter-rouge&quot;&gt;N&lt;/code&gt;. Ad esempio &lt;code class=&quot;highlighter-rouge&quot;&gt;28&lt;/code&gt; è un numero perfetto perché sommando i suoi divisori propri (&lt;code class=&quot;highlighter-rouge&quot;&gt;1, 2, 4, 7 e 14&lt;/code&gt;) si ottiene &lt;code class=&quot;highlighter-rouge&quot;&gt;28&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Invece se la somma dei divisori di &lt;code class=&quot;highlighter-rouge&quot;&gt;N&lt;/code&gt; è inferiore al suo valore, &lt;code class=&quot;highlighter-rouge&quot;&gt;N&lt;/code&gt; è un numero &lt;em&gt;difettivo&lt;/em&gt;, mentre se le somma dei divisori è superiore, &lt;code class=&quot;highlighter-rouge&quot;&gt;N&lt;/code&gt; è un numero &lt;em&gt;abbondante&lt;/em&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Scrivi la classe PerfectNumber utile per individuare i numeri perfetti. La classe deve esportare i metodi seguenti:</summary></entry><entry><title type="html">Cylinder</title><link href="http://localhost:4000/eserciziario2.0/methods/math/2022/02/23/cylinder.html" rel="alternate" type="text/html" title="Cylinder" /><published>2022-02-23T10:43:12+01:00</published><updated>2022-02-23T10:43:12+01:00</updated><id>http://localhost:4000/eserciziario2.0/methods/math/2022/02/23/cylinder</id><content type="html" xml:base="http://localhost:4000/eserciziario2.0/methods/math/2022/02/23/cylinder.html">&lt;p&gt;Scrivi la classe &lt;code class=&quot;highlighter-rouge&quot;&gt;Cylinder&lt;/code&gt; contenente i metodi seguenti:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public static double getCircumference(double radius)&lt;/code&gt;: ritorna la circonferenza di un cilindro di raggio &lt;code class=&quot;highlighter-rouge&quot;&gt;radius&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public static double getBaseArea(double radius)&lt;/code&gt;: ritorna l’area di base di un cilindro di raggio &lt;code class=&quot;highlighter-rouge&quot;&gt;radius&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public static double getSideArea(double radius, double height)&lt;/code&gt;: ritorna la superficie laterale di un cilindro di raggio &lt;code class=&quot;highlighter-rouge&quot;&gt;radius&lt;/code&gt; e altezza &lt;code class=&quot;highlighter-rouge&quot;&gt;height&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public static double getArea(double radius, double height)&lt;/code&gt;: ritorna l’area totale di un cilindro di raggio &lt;code class=&quot;highlighter-rouge&quot;&gt;radius&lt;/code&gt; e altezza &lt;code class=&quot;highlighter-rouge&quot;&gt;height&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public static double getVolume(double radius, double height)&lt;/code&gt;: ritorna il volume di un cilindro di raggio &lt;code class=&quot;highlighter-rouge&quot;&gt;radius&lt;/code&gt; e altezza &lt;code class=&quot;highlighter-rouge&quot;&gt;height&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nel metodo &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; verifica il buon  funzionamento di ogni metodo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nota&lt;/strong&gt;: per ottenere il valore di pi-greco puoi utilizzare la costante &lt;code class=&quot;highlighter-rouge&quot;&gt;Math.PI&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vedi anche &lt;a href=&quot;https://en.wikipedia.org/wiki/Cylinder&quot;&gt;wikipedia&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/3/36/Circular_cylinder_rh.svg/1200px-Circular_cylinder_rh.svg.png&quot; alt=&quot;Circular cylinder rh.svg&quot; width=&quot;300&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://creativecommons.org/licenses/by-sa/3.0&quot; title=&quot;Creative Commons Attribution-Share Alike 3.0&quot;&gt;CC BY-SA 3.0&lt;/a&gt;, &lt;a href=&quot;https://commons.wikimedia.org/w/index.php?curid=18796293&quot;&gt;Link&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Scrivi la classe Cylinder contenente i metodi seguenti:</summary></entry><entry><title type="html">CatchTheChicken</title><link href="http://localhost:4000/eserciziario2.0/wrapper/args/switch/2022/02/02/catchthechicken.html" rel="alternate" type="text/html" title="CatchTheChicken" /><published>2022-02-02T12:29:44+01:00</published><updated>2022-02-02T12:29:44+01:00</updated><id>http://localhost:4000/eserciziario2.0/wrapper/args/switch/2022/02/02/catchthechicken</id><content type="html" xml:base="http://localhost:4000/eserciziario2.0/wrapper/args/switch/2022/02/02/catchthechicken.html">&lt;p&gt;Devi aiutare il fattore John a catturare la sua gallina. Il fattore e la gallina si trovano in un campo di 3 righe e tre colonne. La cella in alto a sinistra si trova alla riga &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; e alla colonna &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;👷🍃🍃
🍃🍃🍃
🍃🍃🍃
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;La cella in basso a sinistra si trova alla riga &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt; e alla colonna &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;🍃🍃🍃
🍃🍃🍃
👷🍃🍃
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;La cella in basso a destra si trova alla riga &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt; e alla colonna &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;🍃🍃🍃
🍃🍃🍃
🍃🍃👷
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Il tuo programma riceve 4 numeri interi come argomenti da linea di comando, nell’ordine:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;la coordinata della riga in cui si trova il fattore&lt;/li&gt;
  &lt;li&gt;la coordinata della colonna in cui si trova il fattore&lt;/li&gt;
  &lt;li&gt;la coordinata della riga in cui si trova la gallina&lt;/li&gt;
  &lt;li&gt;la coordinata della colonna in cui si trova la gallina&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Il tuo programma deve stampare la direzione in cui il fattore si deve spostare per prendere la gallina:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;N&quot;&lt;/code&gt;: NORD, il fattore si sposta verso l’alto&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;S&quot;&lt;/code&gt;: SUD, il fattore si sposta verso il basso&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;W&quot;&lt;/code&gt;: WEST, il fattore si sposta verso sinistra&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;E&quot;&lt;/code&gt;: EAST, il fattore si sposta verso destra&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;esempio&quot;&gt;Esempio&lt;/h2&gt;

&lt;p&gt;Se gli argomenti forniti sono &lt;code class=&quot;highlighter-rouge&quot;&gt;[1,1,0,1]&lt;/code&gt; significa che il fattore si trova al centro del campo (riga &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;, colonna &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;) e la gallina si trova nella riga in alto (&lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;) e nella colonna centrale (&lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;🍃🐔🍃
🍃👷🍃
🍃🍃🍃
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;La gallina si trova sopra al fattore, per catturarla il fattore dovrà spostarsi verso NORD, quindi il tuo programma deve stampare &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;N&quot;&lt;/code&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Devi aiutare il fattore John a catturare la sua gallina. Il fattore e la gallina si trovano in un campo di 3 righe e tre colonne. La cella in alto a sinistra si trova alla riga 0 e alla colonna 0:</summary></entry><entry><title type="html">Randomizer</title><link href="http://localhost:4000/eserciziario2.0/math/methods/2021/04/14/randomizer.html" rel="alternate" type="text/html" title="Randomizer" /><published>2021-04-14T13:29:19+02:00</published><updated>2021-04-14T13:29:19+02:00</updated><id>http://localhost:4000/eserciziario2.0/math/methods/2021/04/14/randomizer</id><content type="html" xml:base="http://localhost:4000/eserciziario2.0/math/methods/2021/04/14/randomizer.html">&lt;p&gt;Scrivi il programma &lt;code class=&quot;highlighter-rouge&quot;&gt;Randomizer&lt;/code&gt; che, dati tre numeri interi passati come argomenti da linea di comando, genera una serie di numeri casuali (separata &lt;code class=&quot;highlighter-rouge&quot;&gt;','&lt;/code&gt; e terminata da &lt;code class=&quot;highlighter-rouge&quot;&gt;'.'&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;I primi due argomenti determinano il range dei valori casuali che verranno generati. Il valore più piccolo non sarà compreso nel range mentre il più grande si.&lt;/p&gt;

&lt;p&gt;Il terzo argomento determina il numero di valori da generare.&lt;/p&gt;

&lt;p&gt;Ad esempio:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ java Randomizer 0 4 5

1, 3, 1, 2, 4.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Oppure:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ java Randomizer 5 1 6

2, 4, 5, 3, 5, 2.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Se il numero di argomenti non è sufficiente il programma deve stampare un messaggio di errore e terminare:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ java Randomizer 5 

Argomenti insufficienti
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Se gli argomenti non sono validi il programma dovrà stampare un messaggio di errore indicando il primo valore errato e terminare:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ java Randomizer 1 4 b 

Argomento non valido: b
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;dl&gt;
  &lt;dt&gt;Nota&lt;/dt&gt;
  &lt;dd&gt;è vietato utilizzare la classe &lt;code class=&quot;highlighter-rouge&quot;&gt;java.util.Random&lt;/code&gt;.&lt;/dd&gt;
&lt;/dl&gt;</content><author><name></name></author><summary type="html">Scrivi il programma Randomizer che, dati tre numeri interi passati come argomenti da linea di comando, genera una serie di numeri casuali (separata ',' e terminata da '.').</summary></entry><entry><title type="html">CharCounter</title><link href="http://localhost:4000/eserciziario2.0/string/files/2020/12/16/charcounter.html" rel="alternate" type="text/html" title="CharCounter" /><published>2020-12-16T10:03:58+01:00</published><updated>2020-12-16T10:03:58+01:00</updated><id>http://localhost:4000/eserciziario2.0/string/files/2020/12/16/charcounter</id><content type="html" xml:base="http://localhost:4000/eserciziario2.0/string/files/2020/12/16/charcounter.html">&lt;p&gt;Scrivi il programma &lt;code class=&quot;highlighter-rouge&quot;&gt;CharCounter&lt;/code&gt; che calcola la frequenza dei caratteri alfabetici contenuti in un file di testo. Il percorso del file è fornito come primo argomento da linea di comando. Il programma legge il contenuto del file e stampa il conteggio dei caratteri (&lt;em&gt;case insensitive&lt;/em&gt;) e il tempo impiegato. Ad esempio, per un file contenente il testo seguente:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;il programma stampa:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'a': 29
'b': 3
'c': 16
'd': 19
'e': 38
'f': 3
'g': 3
'h': 1
'i': 42
'j': 0
'k': 0
'l': 22
'm': 17
'n': 24
'o': 29
'p': 11
'q': 5
'r': 22
's': 18
't': 32
'u': 29
'v': 3
'w': 0
'x': 3
'y': 0
'z': 0

Parse time: 6ms
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Se il percorso fornito come primo argomento non è valido (non esiste, non è leggibile), il programma stampa il messaggio &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;Error reading &amp;lt;file&amp;gt;&quot;&lt;/code&gt; e termina.&lt;/p&gt;

&lt;p&gt;Se non vengono forniti argomenti il programma stampa il messaggio &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;Usage: java CharCounter &amp;lt;file&amp;gt;&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Per verificare il buon funzionamento del tuo programma puoi usare la &lt;a href=&quot;/eserciziario2.0/assets/posts/LA_DIVINA_COMMEDIA.txt&quot;&gt;Divina commedia&lt;/a&gt; e cronometrare il tempo impiegato (usa &lt;code class=&quot;highlighter-rouge&quot;&gt;System.currentTimeMillis()&lt;/code&gt; per misurare il tempo).&lt;/p&gt;</content><author><name></name></author><summary type="html">Scrivi il programma CharCounter che calcola la frequenza dei caratteri alfabetici contenuti in un file di testo. Il percorso del file è fornito come primo argomento da linea di comando. Il programma legge il contenuto del file e stampa il conteggio dei caratteri (case insensitive) e il tempo impiegato. Ad esempio, per un file contenente il testo seguente:</summary></entry><entry><title type="html">FrameName</title><link href="http://localhost:4000/eserciziario2.0/loop/draw/2020/12/12/framename.html" rel="alternate" type="text/html" title="FrameName" /><published>2020-12-12T10:10:30+01:00</published><updated>2020-12-12T10:10:30+01:00</updated><id>http://localhost:4000/eserciziario2.0/loop/draw/2020/12/12/framename</id><content type="html" xml:base="http://localhost:4000/eserciziario2.0/loop/draw/2020/12/12/framename.html">&lt;p&gt;Scrivi la classe &lt;code class=&quot;highlighter-rouge&quot;&gt;FrameName&lt;/code&gt; che chiede all’utente di inserire un testo e po lo stampa incorniciandolo utilizzando i caratteri Unicode della pagina &lt;a href=&quot;http://www.unicode.org/charts/PDF/U2500.pdf&quot;&gt;U2500&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Qualche esempio:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Inserire testo: Alb
┌─────┐
│ Alb │
└─────┘
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Oppure:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Inserire testo: Andrea
┌────────┐
│ Andrea │
└────────┘
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;O ancora:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Inserire testo: Tanto va la gatta al lardo...
┌───────────────────────────────┐
│ Tanto va la gatta al lardo... │
└───────────────────────────────┘
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Nota: Su alcune shell i caratteri unicode potrebbero essere rappresentati in modo errato.&lt;/p&gt;</content><author><name></name></author><summary type="html">Scrivi la classe FrameName che chiede all’utente di inserire un testo e po lo stampa incorniciandolo utilizzando i caratteri Unicode della pagina U2500.</summary></entry></feed>